<!DOCTYPE html>
<head>
  <title>Stocks with Friends</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://fonts.googleapis.com/css?family=Montserrat:800" rel="stylesheet">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">
  <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css" rel="stylesheet">
  <style>

  body {
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizelegibility;
    background-color: #f4f4f4;
  }

  h1 {
    font-family: 'Montserrat', sans-serif;
    color: #373737;
  }

  input {
    height: 30px;
  }

  circle:hover {
    cursor: pointer;
  }

  .stocks {
    padding: 10px 15px;
    margin: 5px;
    border: 1px solid black;
    display: inline-block;
  }

  .show-data:hover {
    cursor: pointer;
    text-decoration: underline;
  }

  .fa-trash {
    color: gray;
  }

  .fa-trash:hover {
    cursor: pointer;
    color: blue;
  }

  .axis {
    font: 10px sans-serif;
  }

  .axis path,
  .axis line {
    fill: none;
    stroke: black;
    shape-rendering: crispEdges;
  }

  text {
    color: white;
  }

  .well {
    background-color: rgba(0,0,0,0.5);
    color: white;
    padding: 5px;
    font-size: 16px;
  }

  p:hover {
    cursor: pointer;
  }

  .centered {
    right: 50%;
    top: 50%;
    position: fixed;

  }

  .loader {
    border: 16px solid #f3f3f3; /* Light grey */
    border-top: 16px solid #3498db; /* Blue */
    border-radius: 50%;
    width: 120px;
    height: 120px;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
  </style>
</head>

<body>
  <div class="container">
    <div class="row">
      <div class="col-md-12">
        <h1 class="text-center">Stocks With Friends</h1>
      </div>
    </div>
    <div class="row">
      <div class="col-md-6">
        <span class="lead pull-right">Enter Stock Symbol : e.g. AAPL (Apple)</span>
      </div>
      <div class="col-md-6">
        <span id="show"></span>
        <form id="symbol" style="display:inline;">
          <input name="symbol" type="text" id="symbol-input">
          <input type="submit" value="Go" class="btn btn-default">
        </form>
      </div>
      <div class="col-md-12">
          <div id="stock-panel"></div>
        </div>
    </div>
    <div class="centered">
      <div class="loader"></div>
    </div>
    <div class="row">
      <svg width="960" height="500"></svg>
    </div>
    <div class="row">
      <div class="col-md-12">
        <span><strong>Project by :</strong> by <a href="https://mike.cabelin.com">Neptune Michael Cabelin</a> ---
        <strong>Github repository found at : </strong><a href="https://github.com/ncabelin/stocks-with-friends.git">https://github.com/ncabelin/stocks-with-friends.git</a></span>
      </div>
    </div>
  </div>
<script src="/socket.io/socket.io.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://d3js.org/d3.v4.min.js"></script>
<script>
$(document).ready(function() {
  var socket = io();
  socket.on('add stock', function(stck) {
    addStock(stck);
  });

  socket.on('remove stock', function(stck) {
    removeStock(stck);
  });

  var colors = ['steelblue','red','orange', '#cfcf2a', 'green', 'purple', 'black', 'violet', 'brown', 'pink'],
      symbols = [],
      first = true,
      stock_data = [];

  // onLoad check server for currently saved stocks
  $.ajax({
    type: 'GET',
    url: '/list_stocks'
  }).done(function(result) {
    result.forEach(function(s, i) {
      addStock(s.name);
    });
  }).fail(function(err) {
    console.log(err);
  });

  // form submit handler
  $('#symbol').submit(function(e) {
    e.preventDefault();
    // get symbol value
    var sym = $('#symbol-input').val().toUpperCase();
    socket.emit('add stock', sym);
  });

  function addStock(sym) {
    $('.loader').show();
    var color;

    // empty input
    $('#symbol-input').val('');

    // check if symbol already exists
    var index = symbols.indexOf(sym);
    if (index === -1) {
      var i = symbols.length;
      symbols.push(sym);
      color = colors[i];
    } else {
      // symbol exists already
      return;
    }

    getStockData(sym).done(function(result) {
      $('#stock-panel').append('<span class="stocks" data-id="' + sym + '"><strong><span class="show-data" data-id="' + sym + '">' + sym + '</span></strong> &nbsp;&nbsp; <i class="fa fa-trash" data-id="' + sym + '"></i></span>');
      $('span[data-id=' + sym + ']').css('color', color);

      $('.fa-trash').off()
      $('.fa-trash').click(function() {
        var symbol = $(this).data('id');
        // remove stock from database
        socket.emit('remove stock', symbol);
      });

      var converted = convertStocks(result);
      renderChart(converted, color, first, sym);
      first = false;
    }).fail(function(err) {
      alert('Failed to get data');
    });
  }

  function removeStock(symbol) {
    // remove from symbols array
    var symbol_index = symbols.indexOf(symbol);
    if (symbol_index !== -1) {
      // remove line
      d3.select('#' + symbol).remove();
      d3.selectAll('.' + symbol).remove();
      // remove DOM element
      $('span[data-id="' + symbol + '"]').remove();
      // remove from symbols array
      symbols.splice(symbol_index, 1);
    } else {
      console.log('Symbol already deleted')
    }
  }

  function getStockData(symbol) {
    return $.ajax({
      type: 'GET',
      url: '/get_stock?q=' + symbol
    });
  }

  function convertStocks(obj) {
    // convert object data to array of date and close
    var data = obj['Monthly Time Series'];
    var arr = [];
    for (k in data) {
      if (data.hasOwnProperty(k)) {
        arr.push({
          date: k,
          close: data[k]['4. close']
        });
      }
    }
    return arr
  }

  function renderDate(date) {
    var monthNames = ["January", "February", "March", "April", "May", "June",
      "July", "August", "September", "October", "November", "December"
    ];
    var d = new Date(date);
    return monthNames[d.getMonth()] + ', ' + d.getFullYear();
  }

  function renderChart(data, c, first, symbol) {

    var div = d3.select(".container").append("div")
              .attr("class", "tooltip")
              .style("opacity", 0);

    var svg = d3.select("svg"),
    margin = {top: 20, right: 20, bottom: 50, left: 50},
    width = +svg.attr("width") - margin.left - margin.right,
    height = +svg.attr("height") - margin.top - margin.bottom,
    bisectDate = d3.bisector(function(d) { return d.date; }).left,
    g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    var x = d3.scaleTime()
        .range([0, width]);

    var y = d3.scaleLinear()
        .range([height, 0]);

    var line = d3.line()
        .x(function(d) {
          return x(d.date); })
        .y(function(d) {
          return y(d.close); });

    data.forEach(function(d) {
        var d_arr = d.date.split('-');
        d.date = new Date(d_arr[1] + '/' + d_arr[2] + '/' + d_arr[0]);
        d.close = +d.close;
    });

    x.domain(d3.extent(data, function(d) { return d.date; }));
    y.domain(d3.extent(data, function(d) { return d.close; }));

    // draw axis only if first rendering
    if (first) {
      g.append("g")
        .attr("transform", "translate(0," + height + ")")
        .call(d3.axisBottom(x));

      g.append("g")
          .call(d3.axisLeft(y))
        .append("text")
          .attr("fill", "#000")
          .attr("transform", "rotate(-90)")
          .attr("y", 6)
          .attr("dy", "0.71em")
          .attr("text-anchor", "end")
          .text("Price ($)");
    }

    g.append("path")
        .datum(data)
        .attr("id", symbol)
        .attr("fill", "none")
        .attr("stroke", c)
        .attr("stroke-linejoin", "round")
        .attr("stroke-linecap", "round")
        .attr("stroke-width", 1.5)
        .attr("d", line)
        .on("mousemove", function() {
          var m = d3.mouse(this)
          console.log(m);
        })
      .append("text");

    g.selectAll('dot')
      .data(data)
    .enter().append('circle')
      .attr('class', symbol)
      .attr('r', 2)
      .attr('cx', function(d) { return x(d.date); } )
      .attr('cy', function(d) { return y(d.close); } )
      .on("mouseover", function(d, i) {
            div.transition().duration(100).style("opacity", 1);
            div.html("<div class='well'><p><strong>Stock : </strong> " + symbol + "<br><strong>Date : </strong>" + renderDate(data[i].date) + "<br><strong>Close : </strong>$" + data[i].close +
              "</div>")
            .style("left", (d3.event.pageX) + "px")
            .style("top", (d3.event.pageY + 30) + "px");
          })
          .on("mouseout", function(d, i) {
            div.html("");
          });

      $('.loader').hide();
  } // end of renderChart()
});

</script>
</body>
